
    /*
     *
     *                           .__  .__ __
     *  __ __  ______ ___________|  | |__|  | __ ____
     * |  |  \/  ___// __ \_  __ \  | |  |  |/ // __ \
     * |  |  /\___ \\  ___/|  | \/  |_|  |    <\  ___/
     * |____//____  >\___  >__|  |____/__|__|_ \\___  >
     *            \/     \/                   \/    \/
     *
     *
     * (c) 2017, Userlike - https://www.userlike.com
     *
     * Userlike Chat Client
     * Appkey:    a7ef3cde-68d0-3570-9477-651f32318a2a
     * Widgetkey: 9ce30875d0d425cd261b061b059c3760381a20948a99333b8df33778bc73596e
     * Created:   2019-07-08 11:43:25.877064+00:00
     *
     */
    
    (function (root, factory) {
      if (!(root.userlike && root.userlike._router) && (typeof define === 'function' && define.amd && (typeof require !== "function" || (typeof require === "function" &&
          typeof require.specified === "function" && require.specified('userlike-loader'))))) {

          return define('userlike-loader', function() {
            return factory.call(this, root, true);
          });
      } else {
        return factory.call(this, root, false).load();
      }
    }(window, function(root, tryRjs) {
      var options, api;
      if (tryRjs == null) { tryRjs = true; }
      root.userlike = root.userlike || {};
      root.userlike.loader = function(src) {
        var script;
        if (tryRjs) {
            try {
                require.config({
                    paths: { 'userlike': src.replace(/\.js$/, '') }
                });
                require(['userlike'], function(userlike) {});
                return true;
            } catch (e) {
                if (window.console && window.console.log) {
                    window.console.log("RequireJS failed to load userlike module");
                }
            }
        }
        script = document.createElement("script");
        script.setAttribute("type", "text/javascript");
        script.setAttribute("src", src);
        return document.getElementsByTagName("head")[0].appendChild(script);
      };
      return api = {
        options: {},
        configure: function(opt) {
          if (typeof opt === 'object') { api.options = opt; }
          return api;
        },
        load: function(opt) {
          api.configure(opt);
          if (root.userlike._config===undefined ) {
            root.userlike._config = {'app_key': 'a7ef3cde-68d0-3570-9477-651f32318a2a', 'widget_key': '9ce30875d0d425cd261b061b059c3760381a20948a99333b8df33778bc73596e', 'data': '', 'options': api.options};
            root.userlike.loader('//dq4irj27fs462.cloudfront.net/javascripts/userlike-production-2003.min.js');
          }
          return root.userlike;
        }
      };
    }));
    